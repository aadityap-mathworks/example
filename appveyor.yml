os: Visual Studio 2015
version: 3.99.{build}

matrix:
  fast_finish: true
  
environment:
  matrix:
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    platform: x64
    configuration: Debug
    gen: "Visual Studio 16 2019"
    US_SHARED: 1
    US_THREADED: 1
    WITH_COVERAGE: 1

init:
- echo %APPVEYOR_BUILD_WORKER_IMAGE%
- cmake -version
- git config --global core.autocrlf true
  
before_build:
- mkdir build & cd build
#- if "%platform%"=="mingw-w64" set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
#- if "%platform%"=="mingw-w64" set PATH=C:\msys64\mingw64\bin;%PATH%
- if [%WITH_COVERAGE%]==[1] set PATH=%PATH%;C:\Program Files\OpenCppCoverage
- cmake .. -G"%gen%" -DCMAKE_BUILD_TYPE=%configuration% -DBUILD_SHARED_LIBS:BOOL=%US_SHARED% -DUS_ENABLE_THREADING_SUPPORT:BOOL=%US_THREADED% -DUS_ENABLE_COVERAGE:BOOL=%WITH_COVERAGE% -DUS_BUILD_TESTING:BOOL=1 2>&1

install:
- if [%WITH_COVERAGE%]==[1] choco install opencppcoverage
- git submodule update --init --recursive

build_script:
- cmake --build %APPVEYOR_BUILD_FOLDER%/build --config %configuration% -- /maxcpucount

test_script:
- cd %APPVEYOR_BUILD_FOLDER%/build/Debug
- cmd: example
- cmd: ECHO it Works!!!!

after_test:
- OpenCppCoverage.exe --verbose --export_type=cobertura:coverage.xml -- ./example.exe
- ps: |
    if($env:WITH_COVERAGE -eq 0){
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
      bash codecov.sh -f "./coverage.xml"
    }
    
- cmd: ECHO codecov done.!
